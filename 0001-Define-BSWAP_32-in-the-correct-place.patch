From 925bc090ec7a6151a919ec5c52123e86bd1042c6 Mon Sep 17 00:00:00 2001
From: Elliott Sales de Andrade <quantum.analyst@gmail.com>
Date: Wed, 21 Mar 2018 06:02:04 -0400
Subject: [PATCH] Define BSWAP_32 in the correct place.

Signed-off-by: Elliott Sales de Andrade <quantum.analyst@gmail.com>
---
 src/unix/processx-unix.h | 15 +++++++++++++++
 src/unix/processx.c      | 15 ---------------
 2 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/src/unix/processx-unix.h b/src/unix/processx-unix.h
index c762d15..2971051 100644
--- a/src/unix/processx-unix.h
+++ b/src/unix/processx-unix.h
@@ -17,6 +17,21 @@
 
 #include "../processx.h"
 
+/* Define BSWAP_32 on Big Endian systems */
+#ifdef WORDS_BIGENDIAN
+#if (defined(__sun) && defined(__SVR4))
+#include <sys/byteorder.h>
+#elif (defined(__APPLE__) && (defined(__ppc__) || defined(__ppc64__)))
+#include <libkern/OSByteOrder.h>
+#define BSWAP_32 OSSwapInt32
+#elif (defined(__OpenBSD__))
+#define BSWAP_32(x) swap32(x)
+#elif (defined(__GLIBC__))
+#include <byteswap.h>
+#define BSWAP_32(x) bswap_32(x)
+#endif
+#endif
+
 typedef struct processx_handle_s {
   int exitcode;
   int collected;	 /* Whether exit code was collected already */
diff --git a/src/unix/processx.c b/src/unix/processx.c
index 8914da1..3682c3d 100644
--- a/src/unix/processx.c
+++ b/src/unix/processx.c
@@ -13,21 +13,6 @@ static void processx__child_init(processx_handle_t *handle, int pipes[3][2],
 static SEXP processx__make_handle(SEXP private, int cleanup);
 static void processx__handle_destroy(processx_handle_t *handle);
 
-/* Define BSWAP_32 on Big Endian systems */
-#ifdef WORDS_BIGENDIAN
-#if (defined(__sun) && defined(__SVR4))
-#include <sys/byteorder.h>
-#elif (defined(__APPLE__) && defined(__ppc__) || defined(__ppc64__))
-#include <libkern/OSByteOrder.h>
-#define BSWAP_32 OSSwapInt32
-#elif (defined(__OpenBSD__))
-#define BSWAP_32(x) swap32(x)
-#elif (defined(__GLIBC__))
-#include <byteswap.h>
-#define BSWAP_32(x) bswap_32(x)
-#endif
-#endif
-
 extern processx__child_list_t child_list_head;
 extern processx__child_list_t *child_list;
 extern processx__child_list_t child_free_list_head;
-- 
2.14.3

